# ----------------------- FCM extract configuration file -----------------------
cfg::type                   bld
cfg::version                1.0


# ------------------------------------------------------------------------------
# Build information
# ------------------------------------------------------------------------------

# INC /home/amh001/NAA_NEMO/TOOLS/COMPILE/arch_nemo.fcm # Start

#==========================================================
#    Automatically generated by Fcheck_archfile.sh from
#    /home/amh001/NAA_NEMO/ARCH/arch-intel_GPSCIOS.fcm
#==========================================================

# compiler options for PEGASUS (using intel compiler)
#
# NCDF_HOME   root directory containing lib and include subdirectories for netcdf4
# HDF5_HOME   root directory containing lib and include subdirectories for HDF5
# XIOS_HOME   root directory containing lib for XIOS
# OASIS_HOME  root directory containing lib for OASIS
#
# NCDF_INC    netcdf4 include file
# NCDF_LIB    netcdf4 library
# XIOS_INC    xios include file    (taken into accound only if key_iomput is activated)
# XIOS_LIB    xios library         (taken into accound only if key_iomput is activated)
# OASIS_INC   oasis include file   (taken into accound only if key_oasis3 is activated)
# OASIS_LIB   oasis library        (taken into accound only if key_oasis3 is activated)
#
# FC          Fortran compiler command
# FCFLAGS     Fortran compiler flags
# FFLAGS      Fortran 77 compiler flags
# LD          linker
# LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries
# FPPFLAGS    pre-processing flags
# AR          assembler
# ARFLAGS     assembler flags
# MK          make
# USER_INC    complete list of include files
# USER_LIB    complete list of libraries to pass to the linker
#
# Note that:
#  - unix variables $... are accpeted and will be evaluated before calling fcm.
#  - fcm variables are starting with a % (and not a $)
#
%NCDF_HOME                  /home/amh001/software2016/NETCDF4/netcdf4-MPI-HDF5-Intel2016
%HDF5_HOME                  /home/amh001/software2016/HDF5/HDF5-1.8.17-MPI-Intel2016
%XIOS_HOME                  /home/amh001/XIOS2
#OASIS_HOME

%NCDF_INC                   -I/home/amh001/software2016/NETCDF4/netcdf4-MPI-HDF5-Intel2016/include -I/home/amh001/software2016/HDF5/HDF5-1.8.17-MPI-Intel2016/include
%NCDF_LIB                   -L/home/amh001/software2016/HDF5/HDF5-1.8.17-MPI-Intel2016/lib -L/home/amh001/software2016/NETCDF4/netcdf4-MPI-HDF5-Intel2016/lib -lnetcdff -lnetcdf -lhdf5_hl -lhdf5 -lz
%XIOS_INC                   -I/home/amh001/XIOS2/include
%XIOS_LIB                   -L/home/amh001/XIOS2/lib -lxios
#OASIS_INC           -I%OASIS_HOME/build/lib/mct -I%OASIS_HOME/build/lib/psmile.MPI1
#OASIS_LIB           -L%OASIS_HOME/lib -lpsmile.MPI1 -lmct -lmpeu -lscrip

%CPP                        cpp
%FC                         mpif90
%FCFLAGS                    -O2 -fp-model source  -traceback -r8  -convert big_endian -assume byterecl
#%FCFLAGS             -c -fpp -r8 -O3 -assume byterecl -heap-arrays -diag-disable 10010 #-O2 -debug -fp-model precise -traceback -r8  -convert big_endian -assume byterecl
%FFLAGS                     -O2 -fp-model source  -traceback -r8  -convert big_endian -assume byterecl
%LD                         mpif90
%FPPFLAGS                   -P -C -traditional
%LDFLAGS                    -O2
%AR                         ar
%ARFLAGS                    -r
%MK                         make
%USER_INC                   -I/home/amh001/XIOS2/include -I/home/amh001/software2016/NETCDF4/netcdf4-MPI-HDF5-Intel2016/include -I/home/amh001/software2016/HDF5/HDF5-1.8.17-MPI-Intel2016/include
%USER_LIB                   -L/home/amh001/XIOS2/lib -lxios -L/home/amh001/software2016/HDF5/HDF5-1.8.17-MPI-Intel2016/lib -L/home/amh001/software2016/NETCDF4/netcdf4-MPI-HDF5-Intel2016/lib -lnetcdff -lnetcdf -lhdf5_hl -lhdf5 -lz -lstdc++
#USER_INC            %XIOS_INC %OASIS_INC %NCDF_INC
#USER_LIB            %XIOS_LIB %OASIS_LIB %NCDF_LIB
# INC /home/amh001/NAA_NEMO/TOOLS/COMPILE/arch_nemo.fcm # End
# INC /home/amh001/NAA_NEMO/TOOLS/COMPILE/cpp.fcm # Start
bld::tool::fppkeys          key_lim3 key_vectopt_loop key_dynspg_ts key_ldfslp key_traldf_c3d key_dynldf_c3d key_zdftke key_vvl key_zdfddm key_xios2 key_iomput key_mpp_mpi key_bdy key_traldf_smag key_dynldf_smag key_zdftmx
# INC /home/amh001/NAA_NEMO/TOOLS/COMPILE/cpp.fcm # End

search_src                  1

src::ioipsl                 /home/amh001/NAA_NEMO/EXTERNAL/IOIPSL/src
src::nemo                   /home/amh001/NAA_NEMO/CONFIG/NAA_LIM3/WORK

bld::target                 nemo.exe
bld::exe_dep                


dir::root                   /home/amh001/NAA_NEMO/CONFIG/NAA_LIM3/BLD


bld::tool::cpp              cpp
bld::tool::fpp              cpp
bld::tool::fc               mpif90
bld::tool::fflags           -O2 -fp-model source  -traceback -r8  -convert big_endian -assume byterecl -I/home/amh001/XIOS2/include -I/home/amh001/software2016/NETCDF4/netcdf4-MPI-HDF5-Intel2016/include -I/home/amh001/software2016/HDF5/HDF5-1.8.17-MPI-Intel2016/include
bld::tool::ld               mpif90
bld::tool::ldflags          -O2 -L/home/amh001/XIOS2/lib -lxios -L/home/amh001/software2016/HDF5/HDF5-1.8.17-MPI-Intel2016/lib -L/home/amh001/software2016/NETCDF4/netcdf4-MPI-HDF5-Intel2016/lib -lnetcdff -lnetcdf -lhdf5_hl -lhdf5 -lz -lstdc++
bld::tool::ar               ar
bld::tool::arflags          -r
bld::tool::make             make

# Pre-process code before analysing dependencies
bld::pp::ioipsl             1
bld::pp::nemo               1
bld::tool::fppflags::nemo   -P -C -traditional
bld::tool::fppflags::ioipsl -P -C -traditional

# Ignore the following dependencies
bld::excl_dep               inc::netcdf.inc
bld::excl_dep               inc::VT.inc
bld::excl_dep               use::netcdf
bld::excl_dep               use::xios
bld::excl_dep               h::netcdf.inc
bld::excl_dep               h::mpif.h
bld::excl_dep               inc::mpif.h
bld::excl_dep               inc::mpe_logf.h
bld::excl_dep               use::mpi
bld::excl_dep               use::mod_oasis
bld::excl_dep               use::mkl_dfti
# Don't generate interface files
bld::tool::geninterface     none

# Allow ".h90" as an extension for CPP include files
bld::infile_ext::h90        CPP::INCLUDE

# extension for module output
bld::outfile_ext::mod       .mod

# rename executable to nemo.exe
bld::exe_name::model        nemo.exe

